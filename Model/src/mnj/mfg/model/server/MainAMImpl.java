package mnj.mfg.model.server;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import mnj.mfg.model.lov.FillBPOVOImpl;

import mnj.mfg.model.lov.FillSizeVOImpl;
import mnj.mfg.model.lov.operatingUnitsVOImpl;
import mnj.mfg.model.server.common.MainAM;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 05 13:21:18 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MainAMImpl extends ApplicationModuleImpl implements MainAM {
    /**
     * This is the default constructor (do not remove).
     */
    public MainAMImpl() {
    }

    /**
     * Container's getter for HeaderVO1.
     * @return HeaderVO1
     */
    public ViewObjectImpl getHeaderVO1() {
        return (ViewObjectImpl)findViewObject("HeaderVO1");
    }

    /**
     * Container's getter for LineVO1.
     * @return LineVO1
     */
    public ViewObjectImpl getLineVO1() {
        return (ViewObjectImpl)findViewObject("LineVO1");
    }

    /**
     * Container's getter for HeaderLineVL1.
     * @return HeaderLineVL1
     */
    public ViewLinkImpl getHeaderLineVL1() {
        return (ViewLinkImpl)findViewLink("HeaderLineVL1");
    }


    //////////////fill bpo/////////
   
    public void FillRollLines() {


        ViewObject populatevo = getFillBPOVO1();
        // populatevo.executeQuery();

        Row[] r = populatevo.getAllRowsInRange();
        System.out.println("Drop ------->" + r.length);
        for (Row row : r) {

            if (row.getAttribute("Flag") != null &&
                row.getAttribute("Flag").equals("Y")) {
                System.out.println("Flag --->" + row.getAttribute("Flag"));
                popSizeAll(row);
            }
        }
    }
    public void popSizeAll(Row poprow) {


        Row linerow =getRollLine();
        
       linerow.setAttribute("Attribute1", getPopulateValue(poprow, "Attribute1"));
        linerow.setAttribute("Attribute2", getPopulateValue(poprow, "Attribute2"));
        linerow.setAttribute("Attribute3", getPopulateValue(poprow, "Attribute3"));
      linerow.setAttribute("Quantity", getPopulateValue(poprow, "Quantity"));

    } //end of populateLines
    public Row getRollLine() {

        ViewObject vo = getLineVO1();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        return row;
    } //end of createHeader
    
    public String getPopulateValue(Row r, String columnName) {

        String value = null;
        try {
            value = r.getAttribute(columnName).toString();
        } catch (Exception e) {
            ;
        }
        return value;
    }
    public void setRollwhereClause(){
            System.out.println("Wher clause STYLE-->"+getstyle());
        try {
                    ViewObject vo = getFillBPOVO1();
                    vo.setWhereClause("POC_ID = '"+getpoc()+"'");
                    vo.executeQuery();
                } catch (Exception e) {

                    e.printStackTrace();
                }
            
            
           /* try {
            ViewObject vo = getFillBPOVO1();
            vo.setWhereClause("STYLE_NAME = '"+getstyle()+"'"+ "And SEASON = '" + getSeason()+"'" + "and buyer_id = '"  + getBuyerId()+"'");
            vo.executeQuery();
        } catch (Exception e) {

            e.printStackTrace();
        }*/
            
    }
    //added by arif to get poc id 
    public String getpoc(){
    
    ViewObject vo = getHeaderVO1();
    String pocid = null;
    try {
        pocid = vo.getCurrentRow().getAttribute("PocId").toString();
    } catch (Exception e) {
        // TODO: Add catch code
        e.printStackTrace();
    }
    
    return pocid;
    
    }
    public String getstyle(){
    
    ViewObject vo = getHeaderVO1();
    String cutNo = null;
    try {
        cutNo = vo.getCurrentRow().getAttribute("StyleNew").toString();
    } catch (Exception e) {
        // TODO: Add catch code
        e.printStackTrace();
    }
    
    return cutNo;
    
    }
    
    public String getSeason(){
    
    ViewObject vo = getHeaderVO1();
    String season = null;
    try {
        season = vo.getCurrentRow().getAttribute("SeasonNew").toString();
    } catch (Exception e) {
    
        e.printStackTrace();
    }
    
    return season;
    
    }
    
    public String getBuyerId(){
    
    ViewObject vo = getHeaderVO1();
    String buyerId = null;
    try {
        buyerId = vo.getCurrentRow().getAttribute("BuyerId").toString();
    } catch (Exception e) {

        e.printStackTrace();
    }
    
    return buyerId;
    
    }
    /////////
    public String getSTNO(){
    
    ViewObject vo = getLineVO1();
    String STNO = null;
    try {
        STNO = vo.getCurrentRow().getAttribute("Attribute2").toString();
    } catch (Exception e) {
        // TODO: Add catch code
        e.printStackTrace();
    }
    return STNO;
    
    }

    /**
     * Container's getter for FillBPOVO1.
     * @return FillBPOVO1
     */
    public FillBPOVOImpl getFillBPOVO1() {
        return (FillBPOVOImpl)findViewObject("FillBPOVO1");
    }
    
    ////////////////////////////////////////
    
    //////////////////////
    public void selectAllLines(String flag) {

        System.out.println("ENTER AM select all line ---->");
        ViewObject populatevo = getFillBPOVO1();
        //populatevo.executeQuery();

        Row[] r = populatevo.getAllRowsInRange();

        for (Row row : r) {
            System.out.println("Loop select");
            row.setAttribute("Flag", flag);
            System.out.println("Get select ---->" + row.getAttribute("Flag"));

        }
    }
    public void selectAllLines1(String flag) {

        System.out.println("ENTER AM select all line 1 ---->");
        ViewObject populatevo = getFillSizeVO1();
        //populatevo.executeQuery();

        Row[] r = populatevo.getAllRowsInRange();

        for (Row row : r) {
            System.out.println("Loop select 1");
            row.setAttribute("SFLAG", flag);
            System.out.println("Get select 1---->" + row.getAttribute("SFLAG"));

        }
    }
    ////////////////////
    
    ////////////////////////////////////////
    //////////////fill Size/////////
    
    public void FillRollLines1() {


        ViewObject populatevo = getFillSizeVO1();
        // populatevo.executeQuery();

        Row[] r = populatevo.getAllRowsInRange();
        System.out.println("Drop ------->" + r.length);
        for (Row row : r) {

            if (row.getAttribute("SFLAG") != null &&
                row.getAttribute("SFLAG").equals("Y")) {
                System.out.println("SFLAG --->" + row.getAttribute("SFLAG"));
                popSizeAll1(row);
            }
        }
    }
    public void popSizeAll1(Row poprow) {


        Row linerow =getRollLine1();
        
       linerow.setAttribute("Attribute1", getPopulateValue1(poprow, "Attribute1"));
        linerow.setAttribute("SizeInseam", getPopulateValue1(poprow, "SizeInseam"));
        linerow.setAttribute("Quantity", getPopulateValue1(poprow, "Quantity"));

    } //end of populateLines
    public Row getRollLine1() {

        ViewObject vo = getInsemSizeDVO1();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        return row;
    } //end of createHeader
    
    public String getPopulateValue1(Row r, String columnName) {

        String value = null;
        try {
            value = r.getAttribute(columnName).toString();
        } catch (Exception e) {
            ;
        }
        return value;
    }
    public void setRollwhereClause1(){
            System.out.println("Wher clause cut no1 -->"+getstyle());
        System.out.println("Wher clause cut no 1 -->"+getSTNO());
            
            ViewObject vo = getFillSizeVO1();
        String aa = getstyle();
        String bb = getSTNO();
       vo.setWhereClause("STYLE_NAME = '"+aa+"' and ATTRIBUTE2 = '"+bb+"'");
           // vo.setWhereClause("STYLE_NAME = '"+getstyle()+"'");
       // vo.setWhereClause("ATTRIBUTE2 = '"+getSTNO()+"'");
       // vo.setWhereClause("STYLE_NAME = '"+getstyle()+"' and ATTRIBUTE2 = '"+getSTNO()+"'");
        System.out.println("Wher clause cut no 2 -->"+getstyle());
        System.out.println("Wher clause cut no 2 -->"+getSTNO());
            vo.executeQuery();
    }
    

    /**
     * Container's getter for FillSizeVO1.
     * @return FillSizeVO1
     */
    public FillSizeVOImpl getFillSizeVO1() {
        return (FillSizeVOImpl)findViewObject("FillSizeVO1");
    }
    
    public void setSessionValues(String orgId, String userId, String respId,
                                         String respAppl) {
          
                

                if (userId != null) {
                   // String flag = getFlagValue(userId, respId);
                    FacesContext fctx = FacesContext.getCurrentInstance();
                    ExternalContext ectx = fctx.getExternalContext();
                    HttpSession userSession = (HttpSession)ectx.getSession(false);
                  //  userSession.setAttribute("Flag", flag);
                    userSession.setAttribute("userId", userId);
                    userSession.setAttribute("orgId", orgId);
                    userSession.setAttribute("respId", respId);
                    userSession.setAttribute("unitName", getUnitName(orgId));
                }
            }


            public String getUnitName (String orgId){
                
                ViewObject vo = getoperatingUnitsVO1();
                vo.setWhereClause("ORGANIZATION_ID = "+orgId);
                vo.executeQuery();
                String name = null;
                vo.first();
                
                try {
                    name = vo.getCurrentRow().getAttribute("Name").toString();
                } catch (Exception e) {
                    // TODO: Add catch code
                    e.printStackTrace();
                }
                return name ;
                    
            }


    /**
     * Container's getter for operatingUnitsVO1.
     * @return operatingUnitsVO1
     */
    public operatingUnitsVOImpl getoperatingUnitsVO1() {
        return (operatingUnitsVOImpl)findViewObject("operatingUnitsVO1");
    }
    
    public String callOperationsHeder(int p_header_id) {
       

        String status = null;
        
        String stmt =
            "BEGIN :1 := APPS.MNJ_CREATE_FINISU_REQUISITION(:2); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, oracle.jdbc.OracleTypes.VARCHAR);
            cs.setInt(2, p_header_id);
            cs.execute();
            status = cs.getString(1);
            cs.close();
            
            
        } catch (Exception e) {
            status = e.getMessage();
        }     

        return status;
    }


    /**
     * Container's getter for InsemSizeDVO1.
     * @return InsemSizeDVO1
     */
    public ViewObjectImpl getInsemSizeDVO1() {
        return (ViewObjectImpl)findViewObject("InsemSizeDVO1");
    }

    /**
     * Container's getter for LineDetailVL1.
     * @return LineDetailVL1
     */
    public ViewLinkImpl getLineDetailVL1() {
        return (ViewLinkImpl)findViewLink("LineDetailVL1");
    }
    
    public void setSizeWhereClause(String bpo, String stn, String color){
        
        ViewObject hvo = this.getHeaderVO1();
        Row row = hvo.getCurrentRow();
        String BuyerName = null;
        String StyleName = null;
        String Season = null;
        try{
            BuyerName = row.getAttribute("BuyerName").toString();
        }catch(Exception e){
            ;    
        }
        try{
            StyleName = row.getAttribute("StyleName").toString();
        }catch(Exception e){
            ;    
        }
        try{
            Season = row.getAttribute("Season").toString();
        }catch(Exception e){
            ;    
        }
        
        ViewObject sizeVO = this.getFillSizeVO1(); 
        sizeVO.setWhereClause("bpo = '"+bpo+"' AND ATTRIBUTE2 = '"+stn+"' AND color = '"+color+"' AND buyer = '"+BuyerName+"' AND style_name = '"+StyleName+"' AND SEASON = '"+Season+"'");
        System.out.println(sizeVO.getQuery());
        sizeVO.executeQuery();     
    }
}
